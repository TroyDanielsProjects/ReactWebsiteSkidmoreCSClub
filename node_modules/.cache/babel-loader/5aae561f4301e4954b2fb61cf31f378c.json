{"ast":null,"code":"var _jsxFileName = \"/Users/troydaniels/Desktop/CS_clubWebsite/cswebsite/src/components/NameHeaderComponent/NameHeaderComponent.js\",\n  _s = $RefreshSig$();\nimport { list } from 'mocha/lib/reporters';\nimport React, { useState, useEffect } from 'react';\nimport './NameHeaderComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NameHeader = props => {\n  _s();\n  let name = [\"S\", \"K\", \"I\", \"D\", \"M\", \"O\", \"R\", \"E\", \" \", \"C\", \"S\", \" \", \"C\", \"L\", \"U\", \"B\"];\n  let nameToAdd = [];\n  let intervalIDs = list(name.length);\n  const [currentLetter, SetCurrentLetter] = useState(0);\n  name.forEach(letter => {\n    nameToAdd.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"letter\",\n      children: letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 24\n    }, this));\n  });\n  const randomRGB = () => {\n    return Math.floor(Math.random() * 256);\n  };\n  function keepChangingColor() {\n    let intervalID = setInterval(function () {\n      let red = randomRGB().toString();\n      let green = randomRGB().toString();\n      let blue = randomRGB().toString();\n      document.getElementsByClassName(\"letter\")[currentLetter].style.color = 'rgb(' + red + ', ' + green + ', ' + blue + ')';\n      intervalIDs[currentLetter] = intervalID;\n      setTimeout(stopInterval, 3000);\n    }, 400);\n  }\n  function stopInterval() {\n    clearInterval(intervalIDs[currentLetter]);\n    SetCurrentLetter += 1;\n  }\n  React.useEffect(() => {\n    for (let i = 0; i < name.length; i++) {\n      setInterval(keepChangingColor, 5000);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexBox\",\n    children: nameToAdd\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(NameHeader, \"uN+INOjpQ8j/Eb0XmRQ2iRaPDqs=\");\n_c = NameHeader;\nvar _c;\n$RefreshReg$(_c, \"NameHeader\");","map":{"version":3,"names":["list","React","useState","useEffect","NameHeader","props","name","nameToAdd","intervalIDs","length","currentLetter","SetCurrentLetter","forEach","letter","push","randomRGB","Math","floor","random","keepChangingColor","intervalID","setInterval","red","toString","green","blue","document","getElementsByClassName","style","color","setTimeout","stopInterval","clearInterval","i"],"sources":["/Users/troydaniels/Desktop/CS_clubWebsite/cswebsite/src/components/NameHeaderComponent/NameHeaderComponent.js"],"sourcesContent":["import { list } from 'mocha/lib/reporters';\nimport React, {useState, useEffect} from 'react';\nimport './NameHeaderComponent.css'\n\n\nexport const NameHeader = (props) => {\n    let name= [\"S\",\"K\",\"I\",\"D\",\"M\",\"O\",\"R\",\"E\",\" \",\"C\",\"S\",\" \",\"C\",\"L\",\"U\",\"B\"]\n    let nameToAdd =[]\n    let intervalIDs = list(name.length)\n    const [currentLetter,SetCurrentLetter] = useState(0);\n    name.forEach((letter)=> {\n        nameToAdd.push(<h2 className='letter'>{letter}</h2>)\n    })\n\n    const randomRGB = () => {\n        return (Math.floor(Math.random()*256));\n    }\n\n    function keepChangingColor() {\n        let intervalID = setInterval(function () {\n        let red = randomRGB().toString();\n        let green = randomRGB().toString();\n        let blue = randomRGB().toString();\n        document.getElementsByClassName(\"letter\")[currentLetter].style.color = 'rgb('+red+', '+green+', '+blue+')';\n        intervalIDs[currentLetter] = intervalID;\n        setTimeout(stopInterval,3000)\n        },400);\n\n    }\n\n    function stopInterval(){\n        clearInterval(intervalIDs[currentLetter]);\n        SetCurrentLetter+=1\n    }\n\n\n    React.useEffect(() => {\n        for (let i =0; i<name.length;i++) {\n            setInterval(keepChangingColor,5000)\n        }\n    })\n\n\n    return (\n        <div className='flexBox'>\n            {nameToAdd}\n        </div>\n    )\n    \n}"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,qBAAqB;AAC1C,OAAOC,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,2BAA2B;AAAA;AAGlC,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EACjC,IAAIC,IAAI,GAAE,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;EAC3E,IAAIC,SAAS,GAAE,EAAE;EACjB,IAAIC,WAAW,GAAGR,IAAI,CAACM,IAAI,CAACG,MAAM,CAAC;EACnC,MAAM,CAACC,aAAa,EAACC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACpDI,IAAI,CAACM,OAAO,CAAEC,MAAM,IAAI;IACpBN,SAAS,CAACO,IAAI,eAAC;MAAI,SAAS,EAAC,QAAQ;MAAA,UAAED;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM,CAAC;EACxD,CAAC,CAAC;EAEF,MAAME,SAAS,GAAG,MAAM;IACpB,OAAQC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,GAAG,CAAC;EACzC,CAAC;EAED,SAASC,iBAAiB,GAAG;IACzB,IAAIC,UAAU,GAAGC,WAAW,CAAC,YAAY;MACzC,IAAIC,GAAG,GAAGP,SAAS,EAAE,CAACQ,QAAQ,EAAE;MAChC,IAAIC,KAAK,GAAGT,SAAS,EAAE,CAACQ,QAAQ,EAAE;MAClC,IAAIE,IAAI,GAAGV,SAAS,EAAE,CAACQ,QAAQ,EAAE;MACjCG,QAAQ,CAACC,sBAAsB,CAAC,QAAQ,CAAC,CAACjB,aAAa,CAAC,CAACkB,KAAK,CAACC,KAAK,GAAG,MAAM,GAACP,GAAG,GAAC,IAAI,GAACE,KAAK,GAAC,IAAI,GAACC,IAAI,GAAC,GAAG;MAC1GjB,WAAW,CAACE,aAAa,CAAC,GAAGU,UAAU;MACvCU,UAAU,CAACC,YAAY,EAAC,IAAI,CAAC;IAC7B,CAAC,EAAC,GAAG,CAAC;EAEV;EAEA,SAASA,YAAY,GAAE;IACnBC,aAAa,CAACxB,WAAW,CAACE,aAAa,CAAC,CAAC;IACzCC,gBAAgB,IAAE,CAAC;EACvB;EAGAV,KAAK,CAACE,SAAS,CAAC,MAAM;IAClB,KAAK,IAAI8B,CAAC,GAAE,CAAC,EAAEA,CAAC,GAAC3B,IAAI,CAACG,MAAM,EAACwB,CAAC,EAAE,EAAE;MAC9BZ,WAAW,CAACF,iBAAiB,EAAC,IAAI,CAAC;IACvC;EACJ,CAAC,CAAC;EAGF,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,UACnBZ;EAAS;IAAA;IAAA;IAAA;EAAA,QACR;AAGd,CAAC;AAAA,GA5CYH,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}