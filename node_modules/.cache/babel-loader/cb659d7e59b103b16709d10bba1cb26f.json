{"ast":null,"code":"var _jsxFileName = \"/Users/troydaniels/Desktop/CS_clubWebsite/cswebsite/src/components/NameHeaderComponent/NameHeaderComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './NameHeaderComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NameHeader = props => {\n  _s();\n  let name = [\"S\", \"K\", \"I\", \"D\", \"M\", \"O\", \"R\", \"E\", \" \", \"C\", \"S\", \" \", \"C\", \"L\", \"U\", \"B\"];\n  let nameToAdd = [];\n  let intervalIDs = [];\n  const [currentLetter, SetCurrentLetter] = useState(0);\n  name.forEach(letter => {\n    nameToAdd.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"letter\",\n      children: letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 24\n    }, this));\n    intervalIDs.push(0);\n  });\n  const randomRGB = () => {\n    return Math.floor(Math.random() * 256);\n  };\n  function startColorChanging() {\n    setInterval(keepChangingColor, 400);\n  }\n  function keepChangingColor() {\n    let intervalID = setInterval(function () {\n      let red = randomRGB().toString();\n      let green = randomRGB().toString();\n      let blue = randomRGB().toString();\n      document.getElementsByClassName(\"letter\")[currentLetter].style.color = 'rgb(' + red + ', ' + green + ', ' + blue + ')';\n      intervalIDs[currentLetter] = intervalID;\n    }, 400);\n  }\n  function stopInterval() {\n    clearInterval(intervalIDs[currentLetter]);\n    document.getElementsByClassName(\"letter\")[currentLetter].style.color = 'white';\n    SetCurrentLetter(currentLetter + 1);\n  }\n  React.useEffect(() => {\n    //setInterval(keepChangingColor,10000)\n  }, [currentLetter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexBox\",\n    children: nameToAdd\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(NameHeader, \"uN+INOjpQ8j/Eb0XmRQ2iRaPDqs=\");\n_c = NameHeader;\nvar _c;\n$RefreshReg$(_c, \"NameHeader\");","map":{"version":3,"names":["React","useState","useEffect","NameHeader","props","name","nameToAdd","intervalIDs","currentLetter","SetCurrentLetter","forEach","letter","push","randomRGB","Math","floor","random","startColorChanging","setInterval","keepChangingColor","intervalID","red","toString","green","blue","document","getElementsByClassName","style","color","stopInterval","clearInterval"],"sources":["/Users/troydaniels/Desktop/CS_clubWebsite/cswebsite/src/components/NameHeaderComponent/NameHeaderComponent.js"],"sourcesContent":["\nimport React, {useState, useEffect} from 'react';\nimport './NameHeaderComponent.css'\n\n\nexport const NameHeader = (props) => {\n    let name= [\"S\",\"K\",\"I\",\"D\",\"M\",\"O\",\"R\",\"E\",\" \",\"C\",\"S\",\" \",\"C\",\"L\",\"U\",\"B\"]\n    let nameToAdd =[]\n    let intervalIDs = []\n    const [currentLetter,SetCurrentLetter] = useState(0);\n    name.forEach((letter)=> {\n        nameToAdd.push(<h2 className='letter'>{letter}</h2>)\n        intervalIDs.push(0)\n    })\n\n    const randomRGB = () => {\n        return (Math.floor(Math.random()*256));\n    }\n\n    function startColorChanging() {\n        setInterval(keepChangingColor,400);\n    }\n\n    function keepChangingColor() {\n        let intervalID = setInterval(function () {\n        let red = randomRGB().toString();\n        let green = randomRGB().toString();\n        let blue = randomRGB().toString();\n        document.getElementsByClassName(\"letter\")[currentLetter].style.color = 'rgb('+red+', '+green+', '+blue+')';\n        intervalIDs[currentLetter] = intervalID;\n        },400);\n\n    }\n\n    function stopInterval(){\n        clearInterval(intervalIDs[currentLetter]);\n        document.getElementsByClassName(\"letter\")[currentLetter].style.color = 'white';\n        SetCurrentLetter(currentLetter+1)\n    }\n\n\n    React.useEffect(() => {\n            //setInterval(keepChangingColor,10000)\n    },[currentLetter])\n\n\n    return (\n        <div className='flexBox'>\n            {nameToAdd}\n        </div>\n    )\n    \n}"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,2BAA2B;AAAA;AAGlC,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EACjC,IAAIC,IAAI,GAAE,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;EAC3E,IAAIC,SAAS,GAAE,EAAE;EACjB,IAAIC,WAAW,GAAG,EAAE;EACpB,MAAM,CAACC,aAAa,EAACC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACpDI,IAAI,CAACK,OAAO,CAAEC,MAAM,IAAI;IACpBL,SAAS,CAACM,IAAI,eAAC;MAAI,SAAS,EAAC,QAAQ;MAAA,UAAED;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM,CAAC;IACpDJ,WAAW,CAACK,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAG,MAAM;IACpB,OAAQC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,GAAG,CAAC;EACzC,CAAC;EAED,SAASC,kBAAkB,GAAG;IAC1BC,WAAW,CAACC,iBAAiB,EAAC,GAAG,CAAC;EACtC;EAEA,SAASA,iBAAiB,GAAG;IACzB,IAAIC,UAAU,GAAGF,WAAW,CAAC,YAAY;MACzC,IAAIG,GAAG,GAAGR,SAAS,EAAE,CAACS,QAAQ,EAAE;MAChC,IAAIC,KAAK,GAAGV,SAAS,EAAE,CAACS,QAAQ,EAAE;MAClC,IAAIE,IAAI,GAAGX,SAAS,EAAE,CAACS,QAAQ,EAAE;MACjCG,QAAQ,CAACC,sBAAsB,CAAC,QAAQ,CAAC,CAAClB,aAAa,CAAC,CAACmB,KAAK,CAACC,KAAK,GAAG,MAAM,GAACP,GAAG,GAAC,IAAI,GAACE,KAAK,GAAC,IAAI,GAACC,IAAI,GAAC,GAAG;MAC1GjB,WAAW,CAACC,aAAa,CAAC,GAAGY,UAAU;IACvC,CAAC,EAAC,GAAG,CAAC;EAEV;EAEA,SAASS,YAAY,GAAE;IACnBC,aAAa,CAACvB,WAAW,CAACC,aAAa,CAAC,CAAC;IACzCiB,QAAQ,CAACC,sBAAsB,CAAC,QAAQ,CAAC,CAAClB,aAAa,CAAC,CAACmB,KAAK,CAACC,KAAK,GAAG,OAAO;IAC9EnB,gBAAgB,CAACD,aAAa,GAAC,CAAC,CAAC;EACrC;EAGAR,KAAK,CAACE,SAAS,CAAC,MAAM;IACd;EACR,CAAC,EAAC,CAACM,aAAa,CAAC,CAAC;EAGlB,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,UACnBF;EAAS;IAAA;IAAA;IAAA;EAAA,QACR;AAGd,CAAC;AAAA,GA/CYH,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}